# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: create env file
        run: |
         touch .env
         echo JWT_SECRET=${{ secrets.JWT_SECRET }} >> .env
         echo APP_PORT=${{ secrets.APP_PORT }} >> .env
         echo OMDB_API_URL=${{ secrets.OMDB_API_URL }} >> .env
         echo OMDB_API_KEY=${{ secrets.OMDB_API_KEY }} >> .env
         echo MONGODB_USER=${{ secrets.MONGODB_USER }} >> .env
         echo MONGODB_PASSWORD=${{ secrets.MONGODB_PASSWORD }} >> .env
         echo MONGODB_DATABASE=${{ secrets.MONGODB_DATABASE }} >> .env
         echo MONGODB_DATABASE_TEST=${{ secrets.MONGODB_DATABASE_TEST }} >> .env
         echo MONGODB_LOCAL_PORT=${{ secrets.MONGODB_LOCAL_PORT }} >> .env
         echo MONGODB_DOCKER_PORT=${{ secrets.MONGODB_DOCKER_PORT }} >> .env
         echo NODE_LOCAL_PORT=${{ secrets.NODE_LOCAL_PORT }} >> .env
         echo NODE_DOCKER_PORT=${{ secrets.NODE_DOCKER_PORT }} >> .env
         echo NODE_DOCKER_PORT_TEST=${{ secrets.NODE_DOCKER_PORT_TEST }} >> .env

      # Runs a single command using the runners shell
      - name: Build the stack
        run: docker-compose up -d

      # Runs a set of commands using the runners shell
      - name: Test
        run: docker-compose run movie npm run test
